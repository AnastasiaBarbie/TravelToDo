{"ast":null,"code":"import { ref } from \"vue\";\nimport { useStore } from \"@/pinia/store\";\nexport default {\n  name: \"TouristGuide\",\n  setup() {\n    const notesStore = useStore();\n    const sortAlphabetically = () => {\n      notesStore.guide.sort((a, b) => a.title.localeCompare(b.title));\n    };\n    const sortAlphabeticallyMax = () => {\n      notesStore.guide.sort((a, b) => b.title.localeCompare(a.title));\n    };\n    const dialog = ref(false);\n    const dialogEvent = ref(false);\n    const newGuide = ref({\n      title: \"\",\n      id: null,\n      dialogEvent: false,\n      event: [{}]\n    });\n    const newEvent = ref({\n      event_name: \"\",\n      id_event: null\n    });\n    const createGuide = () => {\n      if (!newGuide.value.title) {\n        return;\n      }\n      notesStore.addGuide({\n        title: newGuide.value.title,\n        id: notesStore.nextIdTravel,\n        dialogEvent: false\n      });\n      newGuide.value = {\n        title: \"\",\n        id: null,\n        event: [{}]\n      };\n    };\n    const createEvent = guideId => {\n      if (!newEvent.value.event_name) {\n        return;\n      }\n      notesStore.parGuide = guideId;\n      notesStore.addEventToGuide({\n        event_name: newEvent.value.event_name,\n        id_event: notesStore.nextIdEvent\n      });\n      newEvent.value = {\n        event_name: \"\",\n        id_event: null\n      };\n    };\n    return {\n      dialog,\n      dialogEvent,\n      createGuide,\n      newGuide,\n      newEvent,\n      notesStore,\n      sortAlphabetically,\n      sortAlphabeticallyMax,\n      createEvent\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","name","setup","notesStore","sortAlphabetically","guide","sort","a","b","title","localeCompare","sortAlphabeticallyMax","dialog","dialogEvent","newGuide","id","event","newEvent","event_name","id_event","createGuide","value","addGuide","nextIdTravel","createEvent","guideId","parGuide","addEventToGuide","nextIdEvent"],"sources":["/home/abarbie/Project/travel_final/src/components/TouristGuide.vue"],"sourcesContent":["<template>\n  <v-app style=\"margin-left: 150px; margin-right: 150px\">\n    <!--Create place-->\n    <v-dialog width=\"500\" v-model=\"dialog\">\n      <template v-slot:activator=\"{ props }\">\n        <v-btn\n          class=\"btn_purple\"\n          style=\"margin-right: 75%\"\n          v-bind=\"props\"\n          text=\"Внести новое путешествие\"\n        >\n        </v-btn>\n      </template>\n      <template v-slot:default=\"{ isActive }\">\n        <v-card>\n          <v-card-title>Новое путешествие</v-card-title>\n          <v-card-text>\n            <v-form @submit.prevent=\"createGuide\">\n              <v-text-field v-model=\"newGuide.title\" label=\"Название\" required>\n              </v-text-field>\n\n              <v-btn type=\"submit\" @click=\"isActive.value = false\"\n                >Добавить</v-btn\n              >\n            </v-form>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n\n            <v-btn text=\"Закрыть\" @click=\"isActive.value = false\"></v-btn>\n          </v-card-actions>\n        </v-card>\n      </template>\n    </v-dialog>\n    <v-expansion-panels\n      class=\"sort\"\n      :disabled=\"disabled\"\n      style=\"margin-top: 20px\"\n      multiple\n    >\n      <v-expansion-panel>\n        <v-expansion-panel-title>Сортировать</v-expansion-panel-title>\n        <v-expansion-panel-text @click=\"sortAlphabetically()\">\n          от А до Я\n        </v-expansion-panel-text>\n        <v-expansion-panel-text @click=\"sortAlphabeticallyMax()\">\n          от Я до А\n        </v-expansion-panel-text>\n      </v-expansion-panel>\n    </v-expansion-panels>\n\n    <v-list v-if=\"notesStore.guide\">\n      <v-list-item\n        style=\"color: rgb(33, 54, 124)\"\n        v-for=\"guide in notesStore.guide\"\n        :key=\"guide.id\"\n      >\n        <strong> {{ guide.title }}</strong>\n\n        <v-btn\n          small\n          class=\"btn_delete\"\n          :icon=\"true\"\n          @click=\"notesStore.deleteTravelInGuide(guide.id)\"\n          ><v-icon> mdi-delete</v-icon>\n        </v-btn>\n        <v-list>\n          <v-list-item v-for=\"event in guide.event\" :key=\"event.id_event\">\n            - {{ event.event_name }}\n            <v-btn\n              small\n              :icon=\"true\"\n              class=\"btn_delete\"\n              @click=\"notesStore.deleteEventInGuide(guide.id, event.id_event)\"\n            >\n              <v-icon> mdi-delete</v-icon></v-btn\n            >\n          </v-list-item>\n          <v-dialog width=\"500\" v-model=\"guide.dialogEvent\">\n            <template v-slot:activator=\"{ props }\">\n              <v-btn v-bind=\"props\" icon=\"mdi-plus\" size=\"small\"></v-btn>\n            </template>\n            <template v-slot:default=\"{ isActive }\">\n              <v-card>\n                <v-card-title>Новое место посещения</v-card-title>\n                <v-card-text>\n                  <v-form @submit.prevent=\"createEvent(guide.id)\">\n                    <v-text-field\n                      v-model=\"newEvent.event_name\"\n                      label=\"Введите название места посещения\"\n                      required\n                    >\n                    </v-text-field>\n\n                    <v-btn type=\"submit\" @click=\"isActive.value = false\"\n                      >Create</v-btn\n                    >\n                  </v-form>\n                </v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn text=\"Закрыть\" @click=\"isActive.value = false\"></v-btn>\n                </v-card-actions>\n              </v-card>\n            </template>\n          </v-dialog>\n          <hr />\n        </v-list>\n      </v-list-item>\n    </v-list>\n\n    <v-dialog width=\"500\" v-model=\"notesStore.deleteGuideEvent\" persistent>\n      <v-card>\n        <v-card-title>Ошибка</v-card-title>\n        <v-card-text>\n          Данное место используется на главной странице\n        </v-card-text>\n        <v-card-actions>\n          <v-btn @click=\"notesStore.deleteGuideEvent = false\">OK</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-app>\n</template>\n<script>\nimport { ref } from \"vue\";\nimport { useStore } from \"@/pinia/store\";\nexport default {\n  name: \"TouristGuide\",\n  setup() {\n    const notesStore = useStore();\n    const sortAlphabetically = () => {\n      notesStore.guide.sort((a, b) => a.title.localeCompare(b.title));\n    };\n    const sortAlphabeticallyMax = () => {\n      notesStore.guide.sort((a, b) => b.title.localeCompare(a.title));\n    };\n    const dialog = ref(false);\n    const dialogEvent = ref(false);\n    const newGuide = ref({\n      title: \"\",\n      id: null,\n      dialogEvent: false,\n      event: [{}],\n    });\n    const newEvent = ref({\n      event_name: \"\",\n      id_event: null,\n    });\n    const createGuide = () => {\n      if (!newGuide.value.title) {\n        return;\n      }\n\n      notesStore.addGuide({\n        title: newGuide.value.title,\n        id: notesStore.nextIdTravel,\n        dialogEvent: false,\n      });\n      newGuide.value = {\n        title: \"\",\n        id: null,\n        event: [{}],\n      };\n    };\n\n    const createEvent = (guideId) => {\n      if (!newEvent.value.event_name) {\n        return;\n      }\n      notesStore.parGuide = guideId;\n      notesStore.addEventToGuide({\n        event_name: newEvent.value.event_name,\n        id_event: notesStore.nextIdEvent,\n      });\n      newEvent.value = {\n        event_name: \"\",\n        id_event: null,\n      };\n    };\n    return {\n      dialog,\n      dialogEvent,\n      createGuide,\n      newGuide,\n      newEvent,\n      notesStore,\n      sortAlphabetically,\n      sortAlphabeticallyMax,\n      createEvent,\n    };\n  },\n};\n</script>\n<style lang=\"scss\">\n@import \"../assets/variables.scss\";\n</style>\n"],"mappings":"AA6HA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,eAAe;AACxC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIH,QAAQ,CAAC,CAAC;IAC7B,MAAMI,kBAAiB,GAAIA,CAAA,KAAM;MAC/BD,UAAU,CAACE,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC;IACjE,CAAC;IACD,MAAME,qBAAoB,GAAIA,CAAA,KAAM;MAClCR,UAAU,CAACE,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC,CAAC;IACjE,CAAC;IACD,MAAMG,MAAK,GAAIb,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMc,WAAU,GAAId,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMe,QAAO,GAAIf,GAAG,CAAC;MACnBU,KAAK,EAAE,EAAE;MACTM,EAAE,EAAE,IAAI;MACRF,WAAW,EAAE,KAAK;MAClBG,KAAK,EAAE,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC;IACF,MAAMC,QAAO,GAAIlB,GAAG,CAAC;MACnBmB,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxB,IAAI,CAACN,QAAQ,CAACO,KAAK,CAACZ,KAAK,EAAE;QACzB;MACF;MAEAN,UAAU,CAACmB,QAAQ,CAAC;QAClBb,KAAK,EAAEK,QAAQ,CAACO,KAAK,CAACZ,KAAK;QAC3BM,EAAE,EAAEZ,UAAU,CAACoB,YAAY;QAC3BV,WAAW,EAAE;MACf,CAAC,CAAC;MACFC,QAAQ,CAACO,KAAI,GAAI;QACfZ,KAAK,EAAE,EAAE;QACTM,EAAE,EAAE,IAAI;QACRC,KAAK,EAAE,CAAC,CAAC,CAAC;MACZ,CAAC;IACH,CAAC;IAED,MAAMQ,WAAU,GAAKC,OAAO,IAAK;MAC/B,IAAI,CAACR,QAAQ,CAACI,KAAK,CAACH,UAAU,EAAE;QAC9B;MACF;MACAf,UAAU,CAACuB,QAAO,GAAID,OAAO;MAC7BtB,UAAU,CAACwB,eAAe,CAAC;QACzBT,UAAU,EAAED,QAAQ,CAACI,KAAK,CAACH,UAAU;QACrCC,QAAQ,EAAEhB,UAAU,CAACyB;MACvB,CAAC,CAAC;MACFX,QAAQ,CAACI,KAAI,GAAI;QACfH,UAAU,EAAE,EAAE;QACdC,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC;IACD,OAAO;MACLP,MAAM;MACNC,WAAW;MACXO,WAAW;MACXN,QAAQ;MACRG,QAAQ;MACRd,UAAU;MACVC,kBAAkB;MAClBO,qBAAqB;MACrBa;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}