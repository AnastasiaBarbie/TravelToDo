{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nexport const useStore = defineStore(\"mainStore\", {\n  state: () => ({\n    travels: [],\n    guide: [],\n    deleteGuideEvent: false,\n    parGuide: null,\n    parTravel: null,\n    nextIdTravel: 1,\n    nextIdEvent: 1\n  }),\n  actions: {\n    addTravel(newTravel) {\n      location.reload();\n      const copiedTravel = JSON.parse(JSON.stringify(newTravel));\n      this.travels.push(copiedTravel);\n      this.guide.push(copiedTravel);\n      this.nextIdTravel = this.nextIdTravel + 1;\n      this.saveDataToLocalStorage();\n    },\n    addGuide(newGuide) {\n      this.guide.push(newGuide);\n      this.nextIdTravel = this.nextIdTravel + 1;\n      this.saveDataToLocalStorage();\n    },\n    addEvent(newEvent) {\n      const travel = this.travels.find(t => t.id === this.parTravel);\n      const guide = this.guide.find(t => t.id === this.parTravel);\n      let a = true;\n      if (travel) {\n        if (!travel.event) {\n          travel.event = [];\n          a = false;\n        }\n        travel.event.push(newEvent);\n        if (a) {\n          const currentStartDate = new Date(travel.event[travel.event.length - 1].date_start);\n          const previousStartDate = new Date(travel.event[travel.event.length - 2].date_start);\n          if (currentStartDate < previousStartDate) {\n            // Если текущее мероприятие начинается раньше чем предыдущее, подсвечиваем красным\n            travel.event[travel.event.length - 1].highlighted = true;\n          }\n        }\n        this.nextIdEvent = this.nextIdEvent + 1;\n      }\n      if (guide) {\n        if (!guide.event) {\n          guide.event = [];\n        }\n        guide.event.push(newEvent);\n      }\n      this.parTravel = null;\n      this.saveDataToLocalStorage();\n    },\n    addEventToGuide(newEvent) {\n      const guide = this.guide.find(t => t.id === this.parGuide);\n      if (guide) {\n        if (!guide.event) {\n          guide.event = [];\n        }\n        guide.event.push(newEvent);\n        this.nextIdEvent = this.nextIdEvent + 1;\n      }\n      this.parGuide = null;\n      this.saveDataToLocalStorage();\n    },\n    deleteTravel(travelId) {\n      const index = this.travels.findIndex(travel => travel.id === travelId);\n      if (index !== -1) {\n        this.travels.splice(index, 1);\n        this.saveDataToLocalStorage();\n      }\n    },\n    deleteEvent(travelId, eventId) {\n      const travel = this.travels.find(t => t.id === travelId);\n      if (travel) {\n        travel.event = travel.event.filter(event => event.id_event !== eventId);\n        this.saveDataToLocalStorage();\n      }\n    },\n    deleteTravelInGuide(guideId) {\n      const travel = this.travels.find(t => t.id === guideId);\n      if (travel) {\n        return this.deleteGuideEvent = true;\n      } else {\n        this.deleteGuideEvent = false;\n        const index = this.guide.findIndex(travel => travel.id === guideId);\n        if (index !== -1) {\n          this.guide.splice(index, 1);\n          this.saveDataToLocalStorage();\n        }\n      }\n    },\n    deleteEventInGuide(guideId, eventId) {\n      const travel = this.travels.find(t => t.id === guideId);\n      if (travel) {\n        const event = travel.event.find(t => t.id_event === eventId);\n        if (event) {\n          return this.deleteGuideEvent = true;\n        } else {\n          this.deleteGuideEvent = false;\n          const guide = this.guide.find(t => t.id === guideId);\n          guide.event = guide.event.filter(event => event.id_event !== eventId);\n          this.parGuide = null;\n          this.saveDataToLocalStorage();\n        }\n      } else {\n        this.deleteGuideEvent = false;\n        const guide = this.guide.find(t => t.id === guideId);\n        guide.event = guide.event.filter(event => event.id_event !== eventId);\n        this.parGuide = null;\n        this.saveDataToLocalStorage();\n      }\n    },\n    saveDataToLocalStorage() {\n      localStorage.setItem(\"mainStore\", JSON.stringify(this.$state));\n    },\n    initializeStore() {\n      const loadedData = this.loadState;\n      Object.keys(loadedData).forEach(key => {\n        this.$state[key] = loadedData[key];\n      });\n    },\n    updateList(value) {\n      this.travels = value;\n      localStorage.setItem(\"mainStore\", JSON.stringify(this.$state));\n    }\n  },\n  getters: {\n    loadState() {\n      const storedData = localStorage.getItem(\"mainStore\");\n      if (storedData) {\n        return JSON.parse(storedData);\n      }\n      return this.$state;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","useStore","state","travels","guide","deleteGuideEvent","parGuide","parTravel","nextIdTravel","nextIdEvent","actions","addTravel","newTravel","location","reload","copiedTravel","JSON","parse","stringify","push","saveDataToLocalStorage","addGuide","newGuide","addEvent","newEvent","travel","find","t","id","a","event","currentStartDate","Date","length","date_start","previousStartDate","highlighted","addEventToGuide","deleteTravel","travelId","index","findIndex","splice","deleteEvent","eventId","filter","id_event","deleteTravelInGuide","guideId","deleteEventInGuide","localStorage","setItem","$state","initializeStore","loadedData","loadState","Object","keys","forEach","key","updateList","value","getters","storedData","getItem"],"sources":["/home/abarbie/Project/travel_final/src/pinia/store.js"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport const useStore = defineStore(\"mainStore\", {\n  state: () => ({\n    travels: [],\n    guide: [],\n    deleteGuideEvent: false,\n    parGuide: null,\n    parTravel: null,\n    nextIdTravel: 1,\n    nextIdEvent: 1,\n  }),\n  actions: {\n    addTravel(newTravel) {\n      location.reload();\n      const copiedTravel = JSON.parse(JSON.stringify(newTravel));\n\n      this.travels.push(copiedTravel);\n      this.guide.push(copiedTravel);\n\n      this.nextIdTravel = this.nextIdTravel + 1;\n      this.saveDataToLocalStorage();\n    },\n    addGuide(newGuide) {\n      this.guide.push(newGuide);\n      this.nextIdTravel = this.nextIdTravel + 1;\n      this.saveDataToLocalStorage();\n    },\n\n    addEvent(newEvent) {\n      const travel = this.travels.find((t) => t.id === this.parTravel);\n      const guide = this.guide.find((t) => t.id === this.parTravel);\n      let a=true;\n      if (travel) {\n        if (!travel.event) {\n          travel.event = [];\n          a=false;\n        }\n        travel.event.push(newEvent);\n        if (a){\n          const currentStartDate = new Date(travel.event[travel.event.length-1].date_start);\n          const previousStartDate = new Date(travel.event[travel.event.length-2].date_start);\n          if (currentStartDate < previousStartDate) {\n            // Если текущее мероприятие начинается раньше чем предыдущее, подсвечиваем красным\n            travel.event[travel.event.length-1].highlighted = true;\n          } \n        }\n        this.nextIdEvent = this.nextIdEvent + 1;\n      }\n      if (guide) {\n        if (!guide.event) {\n          guide.event = [];\n        }\n        guide.event.push(newEvent);\n      }\n      this.parTravel = null;\n      this.saveDataToLocalStorage();\n    },\n    addEventToGuide(newEvent) {\n      const guide = this.guide.find((t) => t.id === this.parGuide);\n      if (guide) {\n        if (!guide.event) {\n          guide.event = [];\n        }\n        guide.event.push(newEvent);\n        this.nextIdEvent = this.nextIdEvent + 1;\n      }\n      this.parGuide = null;\n      this.saveDataToLocalStorage();\n    },\n\n\n    deleteTravel(travelId) {\n      const index = this.travels.findIndex((travel) => travel.id === travelId);\n      if (index !== -1) {\n        this.travels.splice(index, 1);\n        this.saveDataToLocalStorage();\n      }\n    },\n    deleteEvent(travelId, eventId) {\n      const travel = this.travels.find((t) => t.id === travelId);\n      if (travel) {\n        travel.event = travel.event.filter(\n          (event) => event.id_event !== eventId\n        );\n        this.saveDataToLocalStorage();\n      }\n    },\n\n    deleteTravelInGuide(guideId) {\n      const travel = this.travels.find((t) => t.id === guideId);\n      if (travel) {\n        return (this.deleteGuideEvent = true);\n      } else {\n        this.deleteGuideEvent = false;\n        const index = this.guide.findIndex((travel) => travel.id === guideId);\n        if (index !== -1) {\n          this.guide.splice(index, 1);\n          this.saveDataToLocalStorage();\n        }\n      }\n    },\n    deleteEventInGuide(guideId, eventId) {\n      const travel = this.travels.find((t) => t.id === guideId);\n      if (travel) {\n        const event = travel.event.find((t) => t.id_event === eventId);\n        if (event) {\n          return (this.deleteGuideEvent = true);\n        } else {\n          this.deleteGuideEvent = false;\n          const guide = this.guide.find((t) => t.id === guideId);\n          guide.event = guide.event.filter(\n            (event) => event.id_event !== eventId\n          );\n          this.parGuide = null;\n          this.saveDataToLocalStorage();\n        }\n      } else {\n        this.deleteGuideEvent = false;\n        const guide = this.guide.find((t) => t.id === guideId);\n        guide.event = guide.event.filter((event) => event.id_event !== eventId);\n        this.parGuide = null;\n        this.saveDataToLocalStorage();\n      }\n    },\n    saveDataToLocalStorage() {\n      localStorage.setItem(\"mainStore\", JSON.stringify(this.$state));\n    },\n    initializeStore() {\n      const loadedData = this.loadState;\n      Object.keys(loadedData).forEach((key) => {\n        this.$state[key] = loadedData[key];\n      });\n    },\n    updateList(value) {\n      this.travels = value;\n      localStorage.setItem(\"mainStore\", JSON.stringify(this.$state));\n    },\n  },\n  getters: {\n    loadState() {\n      const storedData = localStorage.getItem(\"mainStore\");\n      if (storedData) {\n        return JSON.parse(storedData);\n      }\n      return this.$state;\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}