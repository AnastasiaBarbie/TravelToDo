{"ast":null,"code":"import { useStore } from \"../pinia/store.js\";\nimport CreateNote from \"./CreateNote.vue\";\nimport CreateEvent from \"./CreateEvent.vue\";\nimport draggable from \"vuedraggable\";\nimport { ref } from \"vue\";\nexport default {\n  name: \"NoteList\",\n  components: {\n    CreateNote,\n    CreateEvent,\n    draggable\n  },\n  setup() {\n    const id_event = ref(null);\n    const notesStore = useStore();\n    const showEvent = travel => {\n      travel.showDetails = !travel.showDetails;\n      notesStore.saveDataToLocalStorage();\n    };\n    const disabled = ref(false);\n    const sortAlphabetically = () => {\n      notesStore.travels.sort((a, b) => a.title.localeCompare(b.title));\n    };\n    const sortAlphabeticallyMax = () => {\n      notesStore.travels.sort((a, b) => b.title.localeCompare(a.title));\n    };\n    const getTotalPrice = travel => {\n      if (travel && travel.event) {\n        return travel.event.reduce((total, event) => total + Number(event.price), 0);\n      } else if (travel && !travel.event) {\n        return 0;\n      }\n    };\n    const sortByPriceMin = () => {\n      notesStore.travels.sort((a, b) => {\n        const totalPriceA = getTotalPrice(a);\n        const totalPriceB = getTotalPrice(b);\n        return totalPriceA - totalPriceB;\n      });\n    };\n    const sortByPriceMax = () => {\n      notesStore.travels.sort((a, b) => {\n        const totalPriceA = getTotalPrice(a);\n        const totalPriceB = getTotalPrice(b);\n        return totalPriceB - totalPriceA;\n      });\n    };\n    return {\n      id_event,\n      disabled,\n      showEvent,\n      notesStore,\n      sortAlphabetically,\n      sortAlphabeticallyMax,\n      getTotalPrice,\n      sortByPriceMin,\n      sortByPriceMax\n    };\n  },\n  computed: {\n    travels: {\n      get() {\n        return this.notesStore.travels;\n      },\n      set(value) {\n        this.notesStore.updateList(value);\n      }\n    }\n  },\n  methods: {\n    onEventDragEnd(travel) {\n      // Подсвечиваем названия мероприятий красным\n      this.highlightDelayedEvents(travel.event);\n\n      // Сохраняем изменения в локальном хранилище\n      this.notesStore.saveDataToLocalStorage();\n    },\n    highlightDelayedEvents(events) {\n      for (let i = 1; i < events.length; i++) {\n        const currentEvent = events[i];\n        const previousEvent = events[i - 1];\n        if (previousEvent) {\n          const currentStartDate = new Date(currentEvent.date_start);\n          const previousStartDate = new Date(previousEvent.date_start);\n          if (currentStartDate < previousStartDate) {\n            // Если текущее мероприятие начинается раньше чем предыдущее, подсвечиваем красным\n            currentEvent.highlighted = true;\n          } else {\n            // Иначе убираем подсветку\n            currentEvent.highlighted = false;\n          }\n        }\n      }\n      for (let i = 0; i < events.length; i++) {\n        const currentEvent = events[i];\n        const nextEvent = events[i + 1];\n        if (nextEvent) {\n          const currentStartDate = new Date(currentEvent.date_start);\n          const nextStartDate = new Date(nextEvent.date_start);\n          if (currentStartDate > nextStartDate) {\n            currentEvent.highlighted = true;\n          } else {\n            currentEvent.highlighted = false;\n          }\n        }\n      }\n    },\n    formattedDate(dateString) {\n      //код форматирования даты\n      const [year, month, day] = dateString.split(\"-\");\n      return `${day}.${month}.${year}`;\n    }\n  }\n};","map":{"version":3,"names":["useStore","CreateNote","CreateEvent","draggable","ref","name","components","setup","id_event","notesStore","showEvent","travel","showDetails","saveDataToLocalStorage","disabled","sortAlphabetically","travels","sort","a","b","title","localeCompare","sortAlphabeticallyMax","getTotalPrice","event","reduce","total","Number","price","sortByPriceMin","totalPriceA","totalPriceB","sortByPriceMax","computed","get","set","value","updateList","methods","onEventDragEnd","highlightDelayedEvents","events","i","length","currentEvent","previousEvent","currentStartDate","Date","date_start","previousStartDate","highlighted","nextEvent","nextStartDate","formattedDate","dateString","year","month","day","split"],"sources":["/home/abarbie/Project/travel_final/src/components/NotesTravels.vue"],"sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <create-note />\n      <v-expansion-panels\n        class=\"sort\"\n        :disabled=\"disabled\"\n        style=\"margin-top: 20px\"\n        multiple\n      >\n        <v-expansion-panel>\n          <v-expansion-panel-title>Сортировать</v-expansion-panel-title>\n          <v-expansion-panel-text @click=\"sortAlphabetically()\">\n            от А до Я\n          </v-expansion-panel-text>\n          <v-expansion-panel-text @click=\"sortAlphabeticallyMax()\">\n            от Я до А\n          </v-expansion-panel-text>\n          <v-expansion-panel-text @click=\"sortByPriceMin()\">\n            Цена по возрастанию\n          </v-expansion-panel-text>\n          <v-expansion-panel-text @click=\"sortByPriceMax()\">\n            Цена по убыванию\n          </v-expansion-panel-text>\n        </v-expansion-panel>\n      </v-expansion-panels>\n      <draggable class=\"travelsList\" v-model=\"travels\" item-key=\"id\">\n        <template #item=\"{ element }\">\n          <v-list>\n            <v-container\n              class=\"handle\"\n              @click=\"showEvent(element)\"\n              style=\"display: flex; align-items: right; color: rgb(33, 54, 124)\"\n            >\n              <div style=\"margin-right: 20px\">\n                <span>&#x2630;</span>\n                <strong>{{ element.title }}</strong>\n              </div>\n              Расходы:{{ getTotalPrice(element) }}\n              <div class=\"btn_delete\">\n                <v-btn @click=\"notesStore.deleteTravel(element.id)\"\n                  ><v-icon> mdi-delete</v-icon></v-btn\n                >\n              </div>\n            </v-container>\n\n            <v-list v-if=\"element.showDetails\">\n              <draggable\n                v-model=\"element.event\"\n                :item-key=\"id_event\"\n                @end=\"onEventDragEnd(element)\"\n              >\n                <template #item=\"{ element: event }\">\n                  <v-row>\n                    <v-col align=\"left\">\n                      <v-checkbox\n                        v-model=\"event.status\"\n                        :class=\"{ highlighted_date: event.highlighted }\"\n                        @change=\"notesStore.saveDataToLocalStorage()\"\n                      >\n                        <div>\n                          <div>\n                            {{ formattedDate(event.date_start) }} -\n                            {{ formattedDate(event.date_end) }} Стоимость:\n                            {{ event.price }}\n                          </div>\n                          <div style=\"color: rgb(0, 14, 58)\">\n                            {{ event.event_name }}\n                          </div>\n                        </div>\n                      </v-checkbox>\n                    </v-col>\n                    <v-col align=\"right\">\n                      <v-btn\n                        :icon=\"true\"\n                        @click=\"\n                          notesStore.deleteEvent(element.id, event.id_event)\n                        \"\n                        ><v-icon> mdi-delete</v-icon></v-btn\n                      >\n                    </v-col>\n                  </v-row>\n                </template>\n              </draggable>\n              <create-event :travelId=\"element.id\" />\n            </v-list>\n          </v-list>\n        </template>\n      </draggable>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport { useStore } from \"../pinia/store.js\";\nimport CreateNote from \"./CreateNote.vue\";\nimport CreateEvent from \"./CreateEvent.vue\";\nimport draggable from \"vuedraggable\";\nimport { ref } from \"vue\";\n\nexport default {\n  name: \"NoteList\",\n  components: { CreateNote, CreateEvent, draggable },\n  setup() {\n    const id_event = ref(null);\n    const notesStore = useStore();\n    const showEvent = (travel) => {\n      travel.showDetails = !travel.showDetails;\n      notesStore.saveDataToLocalStorage();\n    };\n    const disabled = ref(false);\n    const sortAlphabetically = () => {\n      notesStore.travels.sort((a, b) => a.title.localeCompare(b.title));\n    };\n    const sortAlphabeticallyMax = () => {\n      notesStore.travels.sort((a, b) => b.title.localeCompare(a.title));\n    };\n    const getTotalPrice = (travel) => {\n      if (travel && travel.event) {\n        return travel.event.reduce(\n          (total, event) => total + Number(event.price),\n          0\n        );\n      } else if (travel && !travel.event) {\n        return 0;\n      }\n    };\n    const sortByPriceMin = () => {\n      notesStore.travels.sort((a, b) => {\n        const totalPriceA = getTotalPrice(a);\n        const totalPriceB = getTotalPrice(b);\n        return totalPriceA - totalPriceB;\n      });\n    };\n    const sortByPriceMax = () => {\n      notesStore.travels.sort((a, b) => {\n        const totalPriceA = getTotalPrice(a);\n        const totalPriceB = getTotalPrice(b);\n        return totalPriceB - totalPriceA;\n      });\n    };\n    return {\n      id_event,\n      disabled,\n      showEvent,\n      notesStore,\n      sortAlphabetically,\n      sortAlphabeticallyMax,\n      getTotalPrice,\n      sortByPriceMin,\n      sortByPriceMax,\n    };\n  },\n  computed: {\n    travels: {\n      get() {\n        return this.notesStore.travels;\n      },\n      set(value) {\n        this.notesStore.updateList(value);\n      },\n    },\n  },\n  methods: {\n    onEventDragEnd(travel) {\n      // Подсвечиваем названия мероприятий красным\n      this.highlightDelayedEvents(travel.event);\n\n      // Сохраняем изменения в локальном хранилище\n      this.notesStore.saveDataToLocalStorage();\n    },\n    highlightDelayedEvents(events) {\n      for (let i = 1; i < events.length; i++) {\n        const currentEvent = events[i];\n        const previousEvent = events[i - 1];\n        if (previousEvent) {\n          const currentStartDate = new Date(currentEvent.date_start);\n          const previousStartDate = new Date(previousEvent.date_start);\n\n          if (currentStartDate < previousStartDate) {\n            // Если текущее мероприятие начинается раньше чем предыдущее, подсвечиваем красным\n            currentEvent.highlighted = true;\n          } else {\n            // Иначе убираем подсветку\n            currentEvent.highlighted = false;\n          }\n        }\n      }\n      for (let i = 0; i < events.length; i++) {\n        const currentEvent = events[i];\n        const nextEvent = events[i + 1];\n        if (nextEvent) {\n          const currentStartDate = new Date(currentEvent.date_start);\n          const nextStartDate = new Date(nextEvent.date_start);\n\n          if (currentStartDate > nextStartDate) {\n            currentEvent.highlighted = true;\n          } else {\n            currentEvent.highlighted = false;\n          }\n        }\n      }\n    },\n    formattedDate(dateString) {\n      //код форматирования даты\n      const [year, month, day] = dateString.split(\"-\");\n      return `${day}.${month}.${year}`;\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n@import \"../assets/variables.scss\";\n.highlighted_date {\n  color: red;\n}\n.handle {\n  margin-top: 1px;\n  cursor: pointer;\n}\n\n::-webkit-scrollbar {\n  width: 0px;\n}\nhr {\n  margin-top: 10px;\n}\n</style>\n"],"mappings":"AA8FA,SAASA,QAAO,QAAS,mBAAmB;AAC5C,OAAOC,UAAS,MAAO,kBAAkB;AACzC,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,SAAQ,MAAO,cAAc;AACpC,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IAAEL,UAAU;IAAEC,WAAW;IAAEC;EAAU,CAAC;EAClDI,KAAKA,CAAA,EAAG;IACN,MAAMC,QAAO,GAAIJ,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAMK,UAAS,GAAIT,QAAQ,CAAC,CAAC;IAC7B,MAAMU,SAAQ,GAAKC,MAAM,IAAK;MAC5BA,MAAM,CAACC,WAAU,GAAI,CAACD,MAAM,CAACC,WAAW;MACxCH,UAAU,CAACI,sBAAsB,CAAC,CAAC;IACrC,CAAC;IACD,MAAMC,QAAO,GAAIV,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAMW,kBAAiB,GAAIA,CAAA,KAAM;MAC/BN,UAAU,CAACO,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC,CAAC;IACnE,CAAC;IACD,MAAME,qBAAoB,GAAIA,CAAA,KAAM;MAClCb,UAAU,CAACO,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC,CAAC;IACnE,CAAC;IACD,MAAMG,aAAY,GAAKZ,MAAM,IAAK;MAChC,IAAIA,MAAK,IAAKA,MAAM,CAACa,KAAK,EAAE;QAC1B,OAAOb,MAAM,CAACa,KAAK,CAACC,MAAM,CACxB,CAACC,KAAK,EAAEF,KAAK,KAAKE,KAAI,GAAIC,MAAM,CAACH,KAAK,CAACI,KAAK,CAAC,EAC7C,CACF,CAAC;MACH,OAAO,IAAIjB,MAAK,IAAK,CAACA,MAAM,CAACa,KAAK,EAAE;QAClC,OAAO,CAAC;MACV;IACF,CAAC;IACD,MAAMK,cAAa,GAAIA,CAAA,KAAM;MAC3BpB,UAAU,CAACO,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAChC,MAAMW,WAAU,GAAIP,aAAa,CAACL,CAAC,CAAC;QACpC,MAAMa,WAAU,GAAIR,aAAa,CAACJ,CAAC,CAAC;QACpC,OAAOW,WAAU,GAAIC,WAAW;MAClC,CAAC,CAAC;IACJ,CAAC;IACD,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3BvB,UAAU,CAACO,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAChC,MAAMW,WAAU,GAAIP,aAAa,CAACL,CAAC,CAAC;QACpC,MAAMa,WAAU,GAAIR,aAAa,CAACJ,CAAC,CAAC;QACpC,OAAOY,WAAU,GAAID,WAAW;MAClC,CAAC,CAAC;IACJ,CAAC;IACD,OAAO;MACLtB,QAAQ;MACRM,QAAQ;MACRJ,SAAS;MACTD,UAAU;MACVM,kBAAkB;MAClBO,qBAAqB;MACrBC,aAAa;MACbM,cAAc;MACdG;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRjB,OAAO,EAAE;MACPkB,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACzB,UAAU,CAACO,OAAO;MAChC,CAAC;MACDmB,GAAGA,CAACC,KAAK,EAAE;QACT,IAAI,CAAC3B,UAAU,CAAC4B,UAAU,CAACD,KAAK,CAAC;MACnC;IACF;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,cAAcA,CAAC5B,MAAM,EAAE;MACrB;MACA,IAAI,CAAC6B,sBAAsB,CAAC7B,MAAM,CAACa,KAAK,CAAC;;MAEzC;MACA,IAAI,CAACf,UAAU,CAACI,sBAAsB,CAAC,CAAC;IAC1C,CAAC;IACD2B,sBAAsBA,CAACC,MAAM,EAAE;MAC7B,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAID,MAAM,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,MAAME,YAAW,GAAIH,MAAM,CAACC,CAAC,CAAC;QAC9B,MAAMG,aAAY,GAAIJ,MAAM,CAACC,CAAA,GAAI,CAAC,CAAC;QACnC,IAAIG,aAAa,EAAE;UACjB,MAAMC,gBAAe,GAAI,IAAIC,IAAI,CAACH,YAAY,CAACI,UAAU,CAAC;UAC1D,MAAMC,iBAAgB,GAAI,IAAIF,IAAI,CAACF,aAAa,CAACG,UAAU,CAAC;UAE5D,IAAIF,gBAAe,GAAIG,iBAAiB,EAAE;YACxC;YACAL,YAAY,CAACM,WAAU,GAAI,IAAI;UACjC,OAAO;YACL;YACAN,YAAY,CAACM,WAAU,GAAI,KAAK;UAClC;QACF;MACF;MACA,KAAK,IAAIR,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAID,MAAM,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QACtC,MAAME,YAAW,GAAIH,MAAM,CAACC,CAAC,CAAC;QAC9B,MAAMS,SAAQ,GAAIV,MAAM,CAACC,CAAA,GAAI,CAAC,CAAC;QAC/B,IAAIS,SAAS,EAAE;UACb,MAAML,gBAAe,GAAI,IAAIC,IAAI,CAACH,YAAY,CAACI,UAAU,CAAC;UAC1D,MAAMI,aAAY,GAAI,IAAIL,IAAI,CAACI,SAAS,CAACH,UAAU,CAAC;UAEpD,IAAIF,gBAAe,GAAIM,aAAa,EAAE;YACpCR,YAAY,CAACM,WAAU,GAAI,IAAI;UACjC,OAAO;YACLN,YAAY,CAACM,WAAU,GAAI,KAAK;UAClC;QACF;MACF;IACF,CAAC;IACDG,aAAaA,CAACC,UAAU,EAAE;MACxB;MACA,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,IAAIH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;MAChD,OAAQ,GAAED,GAAI,IAAGD,KAAM,IAAGD,IAAK,EAAC;IAClC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}