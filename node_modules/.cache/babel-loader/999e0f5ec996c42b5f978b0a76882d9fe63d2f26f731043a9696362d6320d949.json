{"ast":null,"code":"import { ref, toRefs } from \"vue\";\nimport { useStore } from \"../pinia/store.js\";\nexport default {\n  name: \"NoteList\",\n  props: {\n    travelId: Number\n  },\n  setup(props) {\n    const {\n      travelId\n    } = toRefs(props);\n    const notesStore = useStore();\n    const dialog = ref(false);\n    const newEvent = ref({\n      date_start: null,\n      date_end: null,\n      event_name: \"\",\n      price: 0,\n      id_event: null,\n      status: false,\n      highlighted: false\n    });\n    const createEvent = () => {\n      if (!newEvent.value.date_start || !newEvent.value.event_name || !newEvent.value.date_end) {\n        return;\n      }\n      notesStore.parTravel = travelId;\n      notesStore.addEvent({\n        date_start: newEvent.value.date_start,\n        date_end: newEvent.value.date_end,\n        event_name: newEvent.value.event_name,\n        price: newEvent.value.price,\n        id_event: notesStore.nextIdEvent,\n        highlighted: false\n      });\n      newEvent.value = {\n        date_start: null,\n        date_end: null,\n        event_name: \"\",\n        price: 0,\n        id_event: null,\n        status: false,\n        highlighted: false\n      };\n    };\n    return {\n      dialog,\n      newEvent,\n      createEvent\n    };\n  }\n};","map":{"version":3,"names":["ref","toRefs","useStore","name","props","travelId","Number","setup","notesStore","dialog","newEvent","date_start","date_end","event_name","price","id_event","status","highlighted","createEvent","value","parTravel","addEvent","nextIdEvent"],"sources":["/home/abarbie/Project/travel_final/src/components/CreateEvent.vue"],"sourcesContent":["<template>\n  <v-dialog width=\"500\" v-model=\"dialog\">\n    <template v-slot:activator=\"{ props }\">\n      <v-btn v-bind=\"props\" size=\"small\" style=\"background-color:rgb(153, 165, 204)\">Добавить место</v-btn>\n    </template>\n    <template v-slot:default=\"{ isActive }\">\n      <v-card style=\"color: black;\">\n        <v-card-title>Добавить</v-card-title>\n        <v-card-text>\n          <v-form @submit.prevent=\"createEvent\">\n            <v-text-field\n              type=\"date\"\n              v-model=\"newEvent.date_start\"\n              label=\"Введите дату начала\"\n            />\n            <v-text-field\n              type=\"date\"\n              v-model=\"newEvent.date_end\"\n              :min=\"newEvent.date_start\"\n              label=\"Введите дату окончания\"\n            />\n            <v-text-field\n              v-model=\"newEvent.event_name\"\n              label=\"Введите название мероприятия\"\n              required\n            >\n            </v-text-field>\n            <v-text-field\n              v-model=\"newEvent.price\"\n              type=\"number\"\n              label=\"Укажите стоимость\"\n              required\n            >\n            </v-text-field>\n\n            <v-btn type=\"submit\" @click=\"isActive.value = false\">Добавить</v-btn>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn text=\"Закрыть\" @click=\"isActive.value = false\"/>\n        </v-card-actions>\n      </v-card>\n    </template>\n  </v-dialog>\n  <hr/>\n</template>\n\n<script>\nimport { ref, toRefs } from \"vue\";\nimport { useStore } from \"../pinia/store.js\";\n\nexport default {\n  name: \"NoteList\",\n  props: {\n    travelId: Number,\n  },\n  setup(props) {\n    const { travelId } = toRefs(props);\n    const notesStore = useStore();\n    const dialog = ref(false);\n    const newEvent = ref({\n      date_start: null,\n      date_end: null,\n      event_name: \"\",\n      price: 0,\n      id_event: null,\n      status: false,\n      highlighted: false,\n    });\n    const createEvent = () => {\n      if (\n        !newEvent.value.date_start ||\n        !newEvent.value.event_name ||\n        !newEvent.value.date_end\n      ) {\n        return;\n      }\n      notesStore.parTravel = travelId;\n      notesStore.addEvent({\n        date_start: newEvent.value.date_start,\n        date_end: newEvent.value.date_end,\n        event_name: newEvent.value.event_name,\n        price: newEvent.value.price,\n        id_event: notesStore.nextIdEvent,\n\n        highlighted: false,\n      });\n      newEvent.value = {\n        date_start: null,\n        date_end: null,\n        event_name: \"\",\n        price: 0,\n        id_event: null,\n        status: false,\n        highlighted: false,\n      };\n    };\n    return { dialog, newEvent, createEvent };\n  },\n};\n</script>\n"],"mappings":"AAiDA,SAASA,GAAG,EAAEC,MAAK,QAAS,KAAK;AACjC,SAASC,QAAO,QAAS,mBAAmB;AAE5C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,QAAQ,EAAEC;EACZ,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAM;MAAEC;IAAS,IAAIJ,MAAM,CAACG,KAAK,CAAC;IAClC,MAAMI,UAAS,GAAIN,QAAQ,CAAC,CAAC;IAC7B,MAAMO,MAAK,GAAIT,GAAG,CAAC,KAAK,CAAC;IACzB,MAAMU,QAAO,GAAIV,GAAG,CAAC;MACnBW,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE;IACf,CAAC,CAAC;IACF,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxB,IACE,CAACR,QAAQ,CAACS,KAAK,CAACR,UAAS,IACzB,CAACD,QAAQ,CAACS,KAAK,CAACN,UAAS,IACzB,CAACH,QAAQ,CAACS,KAAK,CAACP,QAAO,EACvB;QACA;MACF;MACAJ,UAAU,CAACY,SAAQ,GAAIf,QAAQ;MAC/BG,UAAU,CAACa,QAAQ,CAAC;QAClBV,UAAU,EAAED,QAAQ,CAACS,KAAK,CAACR,UAAU;QACrCC,QAAQ,EAAEF,QAAQ,CAACS,KAAK,CAACP,QAAQ;QACjCC,UAAU,EAAEH,QAAQ,CAACS,KAAK,CAACN,UAAU;QACrCC,KAAK,EAAEJ,QAAQ,CAACS,KAAK,CAACL,KAAK;QAC3BC,QAAQ,EAAEP,UAAU,CAACc,WAAW;QAEhCL,WAAW,EAAE;MACf,CAAC,CAAC;MACFP,QAAQ,CAACS,KAAI,GAAI;QACfR,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE;MACf,CAAC;IACH,CAAC;IACD,OAAO;MAAER,MAAM;MAAEC,QAAQ;MAAEQ;IAAY,CAAC;EAC1C;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}